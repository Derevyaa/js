/**
 * Функція отримує на вхід об'єкт obj.
Вона перебирає всі ключі цього об'єкта за допомогою циклу for...in.
Для кожного ключа вона перевіряє, чи належить властивість самому об'єкту (а не його прототипу) за допомогою методу hasOwnProperty.
Якщо значення цього ключа є масивом (Array.isArray(value)), функція викликає себе рекурсивно для кожного елементу масиву, щоб перебрати всі його значення.
Якщо значення ключа є об'єктом (typeof value === 'object'), функція також викликає себе рекурсивно для цього об'єкта, щоб перебрати всі його внутрішні значення.
Якщо значення ключа є примітивом, воно просто виводиться на консоль разом з відповідним ключем.
 * @param {*} obj 
 */

// Функція для рекурсивного перебору елементів об'єкта
function traverseObject(obj) {
    for (const key in obj) {
        if (obj.hasOwnProperty(key)) {
            const value = obj[key];
            if (Array.isArray(value)) {
                // Якщо значення є масивом, перебираємо його елементи
                value.forEach(item => {
                    traverseObject(item);
                });
            } else if (typeof value === 'object') {
                // Якщо значення є об'єктом, рекурсивно викликаємо traverseObject()
                traverseObject(value);
            } else {
                // Якщо значення є примітивом, виводимо його
                console.log(key + ':', value);
            }
        }
    }
}

// Зчитуємо дані з файлу
const data = require('./school.json');

// Починаємо перебір з кореневого об'єкта
traverseObject(data);