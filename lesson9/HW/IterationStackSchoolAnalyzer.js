/**
 * 
 * функція traverseStudents є генератором, який здійснює обхід структури даних, що містить інформацію про студентів у форматі JSON. 
 *  як вона працює:
Ініціалізація стеку: Функція розпочинається з ініціалізації стеку stack, в який додається початковий об'єкт obj. 
це об'єкт, що містить інформацію про школу.
Цикл обходу: Поки стек не порожній, функція продовжує витягувати об'єкти зі стеку та обробляти їх. 
Всі дочірні об'єкти, які мають властивість students, обробляються. Для кожного студента виводиться інформація про його ім'я, ID та оцінки.
Пошук вкладених об'єктів: Далі, для кожного ключа у поточному об'єкті obj, перевіряється, чи є значення об'єктом, та, якщо так, додається у стек для подальшого оброблення.
Генерація значень: Генератор повертає кожен знайдений студентський запис через yield, що дозволяє ітерувати над ними у зовнішньому коді.
Коли ви запускаєте цей генератор ітератором у циклі for...of, для кожного значення, що генерується, викликається тіло циклу, дозволяючи обробляти кожен запис про студента.} obj 
 
Ключове слово yield використовується в JavaScript для створення генераторів.
Генератор - це функція, яка може призупиняти своє виконання та повертати проміжні результати без повної завершення виконання. 
Кожен раз, коли викликається yield, виконання функції зупиняється, а значення, передане з yield, видається назовні. 
Після цього, коли генератор знову викликається, виконання починається з місця призупинення і продовжується далі.
У контексті вашого коду, yield використовується для повернення кожного запису про студента з функції traverseStudents. 
Коли ця функція викликається як генераторний ітератор, кожен запис про студента, знайдений під час обходу структури даних, 
буде повертатися через yield, дозволяючи ітерувати над ними у зовнішньому коді.
*/

/**
 * 
 * @param {*} obj 
 */

function* traverseStudents(obj) {
    const stack = [obj];
    while (stack.length > 0) {
        const obj = stack.pop();
        if (obj.students) {
            obj.students.forEach(student => {
                console.log("Ім'я:", student.name);
                console.log("ID:", student.id);
                console.log("Оцінки:", student.grade);
                console.log("\n");
            });
        }
        for (const key in obj) {
            if (obj.hasOwnProperty(key)) {
                const value = obj[key];
                if (typeof value === 'object' && value !== null) {
                    stack.push(value);
                }
            }
        }
    }
}

const data = require('./school.json');
const iterator = traverseStudents(data);
for (const value of iterator) {
    // Цей цикл викликається автоматично для кожного значення, згенерованого генератором.
}
